metadata:
  title: Defend Eviction
  short title: Eviction
---
modules:
  - docassemble.base.util
---
include:
  - discovery.yml
---
objects:
  client: Individual
  has_defense: DADict
  defense_is_recent: DADict
---
mandatory: True
code: |
  info = objects_from_file('eviction.yml')
  retaliation_defenses = info['retaliation_defenses']
  retaliation = info['retaliation']
---
question: |
  What is your name?
fields:
  - First: client.name.first
  - Last: client.name.last
---
question: |
  Do you have a counterclaim?
yesno: retaliation_counterclaim
---
question: |
  What was the improper reason why your landlord threatened
  you with eviction?
fields:
  - Reason: retaliation_defense_other
---
question: |
  % if i == 'other':
  Did your landlord threaten you with eviction for some other
  improper reason?
  % else:
  ${ retaliation[i].question }
  % endif
yesno: has_defense[i]
---
question: |
  % if i == 'other':
  You said: ${ fix_punctuation(retaliation_defense_other) }
  % else:
  Did you ${ retaliation[i].claim } within the
  six month period before your landlord threatened
  you with eviction?
  % endif
subquestion: |
  % if i == 'other':
  Did this happen within the six month period before 
  your landlord threatened you with eviction?
  % endif
yesno: defense_is_recent[i]
---
code: |
  at_least_one_defense_is_recent = False
  for defense in retaliation_defenses + ['other']:
    if has_defense[defense] and defense_is_recent[defense]:
      at_least_one_defense_is_recent = True
      break
  if at_least_one_defense_is_recent:
    retaliation_entitled_to_presumption = True
  else:
    retaliation_entitled_to_presumption = False
---
reconsider: True
code: |
  discovery_requests = set()
  for defense in retaliation_defenses + ['other']:
    if has_defense[defense] and retaliation[defense].discovery is not None:
      for request in retaliation[defense].discovery:
        discovery_requests.add(request)
---
attachment:
  name: Retaliation defense
  filename: retaliation_document
  docx template file: Retaliation.docx
  variable name: defense_document
---
attachment:
  name: Discovery requests
  filename: discovery
  variable name: discovery_document
  content: |
    [BOLDCENTER] Discovery Requests
    
    You are required to provide the following information to ${ client }
    within 30 days.
    
    % for request in discovery_requests:
    * ${ discovery[request] }
    % endfor
---
reconsider: True
code: |
  documents_needed = [defense_document]
  if len(discovery_requests) > 0:
    documents_needed.append(discovery_document)
---
mandatory: True
question: |
  % if len(documents_needed) > 1:
  Here are the documents you will need.
  % else:
  Here is the document you will need.
  % endif
attachment code: documents_needed